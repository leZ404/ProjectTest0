{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yanis/OneDrive/Bureau/Log3900 start prcjcts base/2/LOG2990-108-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PopupTextComponent, StageLvl } from \"@app/components/popup-text/popup-text.component\";\nimport { CreatePageService } from \"./create-page.service\";\nimport { GameCreationToolsService } from \"./game-creation-tools.service\";\nimport { SocketService } from \"./socket.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"./create-page.service\";\nimport * as i3 from \"./game-creation-tools.service\";\nimport * as i4 from \"./socket.service\";\nexport class DialogService {\n  constructor(dialogRef, createPageService, gameCreationToolsService, socketService) {\n    var _this = this;\n\n    this.dialogRef = dialogRef;\n    this.createPageService = createPageService;\n    this.gameCreationToolsService = gameCreationToolsService;\n    this.socketService = socketService;\n\n    this.confirmCallback = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (feedback) {\n        const canvasTempLeft = _this.createPageService.combineLeftImage();\n\n        const canvasTempRight = _this.createPageService.combineRightImage();\n\n        localStorage.setItem('img1', canvasTempLeft.toDataURL().replace('data:image/png;base64,', ''));\n        localStorage.setItem('img2', canvasTempRight.toDataURL().replace('data:image/png;base64,', ''));\n        _this.createPageService.radius = feedback.radius;\n\n        _this.openDialogLoad();\n\n        yield _this.createPageService.detection(canvasTempLeft, canvasTempRight).then(imgUrl => {\n          _this.openDialogDifferences(imgUrl);\n        }).catch(error => {\n          _this.openDialogNotify(error);\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.wrongFormatCallback = feedback => {\n      const res = feedback.event.target;\n      const files = res.files;\n      this.gameCreationToolsService.imageToStorage(this.gameCreationToolsService.lastUpload, files[0]);\n      this.dialogRef.closeAll();\n    };\n\n    this.reinitCallback = () => {\n      this.gameCreationToolsService.clearCanvas(this.resetCanvasId);\n      this.dialogRef.closeAll();\n    };\n\n    this.differencesCallback = () => {\n      this.openDialogCreateGame();\n    };\n\n    this.createGameCallback = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (feedback) {\n        if (!feedback.name) {\n          _this.openDialogCreateGame();\n        } else {\n          _this.createPageService.game.name = feedback.name;\n\n          _this.openDialogLoad();\n\n          yield _this.createPageService.uploadGame().then( /*#__PURE__*/_asyncToGenerator(function* () {\n            _this.openDialogNotify(`<h2>Le jeu ${_this.createPageService.game.name} a été créé!</h2>`);\n\n            _this.socketService.emit('gameCardsModified', null);\n\n            _this.redirectToConfig();\n          })).catch(() => {\n            _this.openDialogNotify('<h2>Erreur lors de la création du jeu!</h2> Essayez à nouveau');\n          });\n        }\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  openDialogWrongFormat() {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      message: \"<h2>Mauvais format!</h2> L'image doit être de format .bmp 640x480\",\n      btnFileText: 'Réessayer'\n    }, this.wrongFormatCallback);\n  }\n\n  openDialogReinit(event) {\n    const elem = event.target;\n    this.resetCanvasId = parseInt(elem.id, 10);\n    const zone = this.resetCanvasId === 0 ? \"l'image originale\" : this.resetCanvasId === 1 ? \"l'image modifiée\" : \"l'image originale et l'image modifiée\";\n    PopupTextComponent.openDialog(this.dialogRef, {\n      message: `<h2>Êtes-vous sur de vouloir réinitialiser ${zone}?</h2`,\n      btnText: 'Réinitialiser'\n    }, this.reinitCallback);\n  }\n\n  openDialogConfirm() {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      btnText: 'Suivant',\n      stage: StageLvl.SetRadius\n    }, this.confirmCallback);\n  }\n\n  openDialogDifferences(img) {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      message: '<h2>Voici les différences détectées</h2>',\n      differencesImg: img,\n      nbDifferences: this.createPageService.game.differences.length,\n      btnText: 'Suivant',\n      stage: StageLvl.ShowDifferences\n    }, this.differencesCallback);\n  }\n\n  openDialogCreateGame() {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      message: 'Nommez votre jeu.',\n      btnText: 'Créer',\n      stage: StageLvl.EnterName\n    }, this.createGameCallback);\n  }\n\n  openDialogLoad() {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      stage: StageLvl.Loading\n    });\n  }\n\n  openDialogNotify(message) {\n    PopupTextComponent.openDialog(this.dialogRef, {\n      message\n    });\n  }\n\n  redirectToConfig() {\n    this.router.navigate(['/config']);\n  }\n\n}\n\nDialogService.ɵfac = function DialogService_Factory(t) {\n  return new (t || DialogService)(i0.ɵɵinject(i1.MatDialog), i0.ɵɵinject(i2.CreatePageService), i0.ɵɵinject(i3.GameCreationToolsService), i0.ɵɵinject(i4.SocketService));\n};\n\nDialogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DialogService,\n  factory: DialogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["MatDialog","PopupTextComponent","StageLvl","CreatePageService","GameCreationToolsService","SocketService","DialogService","constructor","dialogRef","createPageService","gameCreationToolsService","socketService","feedback","canvasTempLeft","combineLeftImage","canvasTempRight","combineRightImage","localStorage","setItem","toDataURL","replace","radius","openDialogLoad","detection","then","imgUrl","openDialogDifferences","catch","error","openDialogNotify","res","event","target","files","imageToStorage","lastUpload","closeAll","clearCanvas","resetCanvasId","openDialogCreateGame","name","game","uploadGame","emit","redirectToConfig","openDialogWrongFormat","openDialog","message","btnFileText","wrongFormatCallback","openDialogReinit","elem","parseInt","id","zone","btnText","reinitCallback","openDialogConfirm","stage","SetRadius","confirmCallback","img","differencesImg","nbDifferences","differences","length","ShowDifferences","differencesCallback","EnterName","createGameCallback","Loading","router","navigate","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\yanis\\OneDrive\\Bureau\\Log3900 start prcjcts base\\2\\LOG2990-108-master\\client\\src\\app\\services\\dialog.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Router } from \"@angular/router\";\nimport { PopupTextComponent, StageLvl } from \"@app/components/popup-text/popup-text.component\";\nimport { DialogData } from \"@app/interfaces/dialog-data\";\nimport { DialogFeedback } from \"@app/interfaces/dialog-feedback\";\nimport { CreatePageService } from \"./create-page.service\";\nimport { GameCreationToolsService } from \"./game-creation-tools.service\";\nimport { SocketService } from \"./socket.service\";\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DialogService {\n    resetCanvasId: number;\n    router: Router;\n    constructor(\n        private readonly dialogRef: MatDialog,\n        private readonly createPageService: CreatePageService,\n        public gameCreationToolsService: GameCreationToolsService,\n        private readonly socketService: SocketService,\n    ) {}\n\n    openDialogWrongFormat() {\n        PopupTextComponent.openDialog(\n            this.dialogRef,\n            {\n                message: \"<h2>Mauvais format!</h2> L'image doit être de format .bmp 640x480\",\n                btnFileText: 'Réessayer',\n            } as DialogData,\n            this.wrongFormatCallback,\n        );\n    }\n\n    openDialogReinit(event: Event) {\n        const elem = event.target as HTMLButtonElement;\n        this.resetCanvasId = parseInt(elem.id, 10);\n\n        const zone =\n            this.resetCanvasId === 0 ? \"l'image originale\" : this.resetCanvasId === 1 ? \"l'image modifiée\" : \"l'image originale et l'image modifiée\";\n\n        PopupTextComponent.openDialog(\n            this.dialogRef,\n            { message: `<h2>Êtes-vous sur de vouloir réinitialiser ${zone}?</h2`, btnText: 'Réinitialiser' } as DialogData,\n            this.reinitCallback,\n        );\n    }\n\n    openDialogConfirm() {\n        PopupTextComponent.openDialog(\n            this.dialogRef,\n            { btnText: 'Suivant', stage: StageLvl.SetRadius } as DialogData,\n            this.confirmCallback,\n        );\n    }\n\n    openDialogDifferences(img: string) {\n        PopupTextComponent.openDialog(\n            this.dialogRef,\n            {\n                message: '<h2>Voici les différences détectées</h2>',\n                differencesImg: img,\n                nbDifferences: this.createPageService.game.differences.length,\n                btnText: 'Suivant',\n                stage: StageLvl.ShowDifferences,\n            } as DialogData,\n            this.differencesCallback,\n        );\n    }\n\n    openDialogCreateGame() {\n        PopupTextComponent.openDialog(\n            this.dialogRef,\n            { message: 'Nommez votre jeu.', btnText: 'Créer', stage: StageLvl.EnterName } as DialogData,\n            this.createGameCallback,\n        );\n    }\n\n    openDialogLoad() {\n        PopupTextComponent.openDialog(this.dialogRef, { stage: StageLvl.Loading } as DialogData);\n    }\n\n    openDialogNotify(message: string) {\n        PopupTextComponent.openDialog(this.dialogRef, { message } as DialogData);\n    }\n\n    confirmCallback = async (feedback: DialogFeedback) => {\n\n        const canvasTempLeft = this.createPageService.combineLeftImage();\n        const canvasTempRight = this.createPageService.combineRightImage();\n\n        localStorage.setItem('img1', canvasTempLeft.toDataURL().replace('data:image/png;base64,', ''));\n        localStorage.setItem('img2', canvasTempRight.toDataURL().replace('data:image/png;base64,', ''));\n\n        this.createPageService.radius = feedback.radius;\n        this.openDialogLoad();\n        await this.createPageService.detection(canvasTempLeft, canvasTempRight)\n            .then((imgUrl: string) => {\n                this.openDialogDifferences(imgUrl);\n            })\n            .catch((error: string) => {\n                this.openDialogNotify(error);\n            });\n    };\n\n    wrongFormatCallback = (feedback: DialogFeedback) => {\n        const res = feedback.event.target as HTMLInputElement;\n        const files = res.files as FileList;\n        this.gameCreationToolsService.imageToStorage(this.gameCreationToolsService.lastUpload, files[0]);\n        this.dialogRef.closeAll();\n    };\n\n    reinitCallback = () => {\n        this.gameCreationToolsService.clearCanvas(this.resetCanvasId);\n        this.dialogRef.closeAll();\n    };\n\n    differencesCallback = () => {\n        this.openDialogCreateGame();\n    };\n\n    createGameCallback = async (feedback: DialogFeedback) => {\n        if (!feedback.name) {\n            this.openDialogCreateGame();\n        } else {\n            this.createPageService.game.name = feedback.name;\n\n            this.openDialogLoad();\n            await this.createPageService.uploadGame()\n                .then(async () => {\n                    this.openDialogNotify(`<h2>Le jeu ${this.createPageService.game.name} a été créé!</h2>`);\n                    this.socketService.emit('gameCardsModified', null);\n                    this.redirectToConfig();\n                })\n                .catch(() => {\n                    this.openDialogNotify('<h2>Erreur lors de la création du jeu!</h2> Essayez à nouveau');\n                });\n        }\n    };\n\n    redirectToConfig() {\n        this.router.navigate(['/config']);\n    }\n}"]},"metadata":{},"sourceType":"module"}