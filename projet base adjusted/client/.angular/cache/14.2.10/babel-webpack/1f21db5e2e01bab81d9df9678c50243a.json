{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/yanis/OneDrive/Bureau/Log3900 start prcjcts base/2/LOG2990-108-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport { CommunicationService } from './communication.service';\nimport { GameInfoService } from './game-info.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./communication.service\";\nimport * as i2 from \"./game-info.service\";\nexport class CardQueueService {\n  constructor(communication, gameInfo) {\n    this.communication = communication;\n    this.gameInfo = gameInfo;\n    this.current = 0;\n    this.leftImageURL = new BehaviorSubject(\"\");\n    this.rightImageURL = new BehaviorSubject(\"\");\n    this.leftImage = new BehaviorSubject(\"\");\n    this.rightImage = new BehaviorSubject(\"\");\n    this.differences = new BehaviorSubject([]);\n    this.gameEnded = new BehaviorSubject(false);\n    this.cardOrder = this.gameInfo.cardOrder;\n    this.nGameCards = this.gameInfo.nGameCards;\n    this.gameCards = this.gameInfo.gameCards;\n  }\n\n  getNext() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.current >= _this.nGameCards) {\n        _this.gameEnded.next(true);\n\n        return;\n      }\n\n      const index = _this.cardOrder[_this.current];\n      let next = _this.gameCards[index];\n      _this.current++;\n      yield _this.pullUrl(next.img1ID, next.img2ID);\n\n      _this.differences.next(next.differences);\n\n      return;\n    })();\n  }\n\n  pullUrl(img1ID, img2ID) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const response1 = _this2.communication.downloadImage(img1ID);\n\n      response1.subscribe(res => {\n        if (res.body) {\n          _this2.leftImageURL.next(`url(data:image/bmp;base64,${res.body})`);\n\n          _this2.leftImage.next(`data:image/bmp;base64,${res.body}`);\n        }\n      });\n\n      const response2 = _this2.communication.downloadImage(img2ID);\n\n      response2.subscribe(res => {\n        if (res.body) {\n          _this2.rightImageURL.next(`url(data:image/bmp;base64,${res.body})`);\n\n          _this2.rightImage.next(`data:image/bmp;base64,${res.body}`);\n        }\n      });\n    })();\n  }\n\n}\n\nCardQueueService.ɵfac = function CardQueueService_Factory(t) {\n  return new (t || CardQueueService)(i0.ɵɵinject(i1.CommunicationService), i0.ɵɵinject(i2.GameInfoService));\n};\n\nCardQueueService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CardQueueService,\n  factory: CardQueueService.ɵfac,\n  providedIn: 'root'\n});\n;","map":{"version":3,"mappings":";AAGA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;;AAKA,OAAM,MAAOC,gBAAP,CAAuB;EAY3BC,YAA6BC,aAA7B,EAA0EC,QAA1E,EAAmG;IAAtE;IAA6C;IACxE,KAAKC,OAAL,GAAe,CAAf;IACA,KAAKC,YAAL,GAAoB,IAAIR,eAAJ,CAA4B,EAA5B,CAApB;IACA,KAAKS,aAAL,GAAqB,IAAIT,eAAJ,CAA4B,EAA5B,CAArB;IACA,KAAKU,SAAL,GAAiB,IAAIV,eAAJ,CAA4B,EAA5B,CAAjB;IACA,KAAKW,UAAL,GAAkB,IAAIX,eAAJ,CAA4B,EAA5B,CAAlB;IACA,KAAKY,WAAL,GAAmB,IAAIZ,eAAJ,CAAkC,EAAlC,CAAnB;IACA,KAAKa,SAAL,GAAiB,IAAIb,eAAJ,CAA6B,KAA7B,CAAjB;IACA,KAAKc,SAAL,GAAiB,KAAKR,QAAL,CAAcQ,SAA/B;IACA,KAAKC,UAAL,GAAkB,KAAKT,QAAL,CAAcS,UAAhC;IACA,KAAKC,SAAL,GAAiB,KAAKV,QAAL,CAAcU,SAA/B;EACD;;EAEKC,OAAO;IAAA;;IAAA;MAEX,IAAI,KAAI,CAACV,OAAL,IAAgB,KAAI,CAACQ,UAAzB,EAAqC;QACnC,KAAI,CAACF,SAAL,CAAeK,IAAf,CAAoB,IAApB;;QACA;MACD;;MAED,MAAMC,KAAK,GAAG,KAAI,CAACL,SAAL,CAAe,KAAI,CAACP,OAApB,CAAd;MAEA,IAAIW,IAAI,GAAG,KAAI,CAACF,SAAL,CAAeG,KAAf,CAAX;MAEA,KAAI,CAACZ,OAAL;MAEA,MAAM,KAAI,CAACa,OAAL,CAAaF,IAAI,CAACG,MAAlB,EAA0BH,IAAI,CAACI,MAA/B,CAAN;;MACA,KAAI,CAACV,WAAL,CAAiBM,IAAjB,CAAsBA,IAAI,CAACN,WAA3B;;MACA;IAfW;EAgBZ;;EAEKQ,OAAO,CAACC,MAAD,EAAiBC,MAAjB,EAA+B;IAAA;;IAAA;MAC1C,MAAMC,SAAS,GAAG,MAAI,CAAClB,aAAL,CAAmBmB,aAAnB,CAAiCH,MAAjC,CAAlB;;MACAE,SAAS,CAACE,SAAV,CAAqBC,GAAD,IAAa;QAC/B,IAAIA,GAAG,CAACC,IAAR,EAAc;UACZ,MAAI,CAACnB,YAAL,CAAkBU,IAAlB,CAAuB,6BAA6BQ,GAAG,CAACC,IAAI,GAA5D;;UACA,MAAI,CAACjB,SAAL,CAAeQ,IAAf,CAAoB,yBAAyBQ,GAAG,CAACC,IAAI,EAArD;QACD;MACF,CALD;;MAOA,MAAMC,SAAS,GAAG,MAAI,CAACvB,aAAL,CAAmBmB,aAAnB,CAAiCF,MAAjC,CAAlB;;MACAM,SAAS,CAACH,SAAV,CAAqBC,GAAD,IAAa;QAC/B,IAAIA,GAAG,CAACC,IAAR,EAAc;UACZ,MAAI,CAAClB,aAAL,CAAmBS,IAAnB,CAAwB,6BAA6BQ,GAAG,CAACC,IAAI,GAA7D;;UACA,MAAI,CAAChB,UAAL,CAAgBO,IAAhB,CAAqB,yBAAyBQ,GAAG,CAACC,IAAI,EAAtD;QACD;MACF,CALD;IAV0C;EAgB3C;;AA3D0B;;;mBAAhBxB,kBAAgB0B;AAAA;;;SAAhB1B;EAAgB2B,SAAhB3B,gBAAgB;EAAA4B,YAFf;;AA8Db","names":["BehaviorSubject","CommunicationService","GameInfoService","CardQueueService","constructor","communication","gameInfo","current","leftImageURL","rightImageURL","leftImage","rightImage","differences","gameEnded","cardOrder","nGameCards","gameCards","getNext","next","index","pullUrl","img1ID","img2ID","response1","downloadImage","subscribe","res","body","response2","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\yanis\\OneDrive\\Bureau\\Log3900 start prcjcts base\\2\\LOG2990-108-master\\client\\src\\app\\services\\card-queue.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Difference } from '@app/interfaces/difference';\nimport { GameCardTemplate } from '@common/game-card-template';\nimport { BehaviorSubject } from 'rxjs';\nimport { CommunicationService } from './communication.service';\nimport { GameInfoService } from './game-info.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CardQueueService {\n  current: number;\n  leftImageURL: BehaviorSubject<string>;\n  rightImageURL: BehaviorSubject<string>;\n  leftImage: BehaviorSubject<string>;\n  rightImage: BehaviorSubject<string>;\n  differences: BehaviorSubject<Difference[]>;\n  gameEnded: BehaviorSubject<boolean>;\n  cardOrder: number[];\n  nGameCards: number;\n  gameCards: GameCardTemplate[];\n\n  constructor(private readonly communication: CommunicationService, private gameInfo: GameInfoService) {\n    this.current = 0;\n    this.leftImageURL = new BehaviorSubject<string>(\"\");\n    this.rightImageURL = new BehaviorSubject<string>(\"\");\n    this.leftImage = new BehaviorSubject<string>(\"\");\n    this.rightImage = new BehaviorSubject<string>(\"\");\n    this.differences = new BehaviorSubject<Difference[]>([]);\n    this.gameEnded = new BehaviorSubject<boolean>(false);\n    this.cardOrder = this.gameInfo.cardOrder;\n    this.nGameCards = this.gameInfo.nGameCards;\n    this.gameCards = this.gameInfo.gameCards;\n  }\n\n  async getNext(): Promise<void> {\n\n    if (this.current >= this.nGameCards) {\n      this.gameEnded.next(true);\n      return;\n    }\n\n    const index = this.cardOrder[this.current];\n\n    let next = this.gameCards[index];\n\n    this.current++;\n\n    await this.pullUrl(next.img1ID, next.img2ID);\n    this.differences.next(next.differences);\n    return;\n  }\n\n  async pullUrl(img1ID: string, img2ID: string): Promise<void> {\n    const response1 = this.communication.downloadImage(img1ID);\n    response1.subscribe((res: any) => {\n      if (res.body) {\n        this.leftImageURL.next(`url(data:image/bmp;base64,${res.body})`);\n        this.leftImage.next(`data:image/bmp;base64,${res.body}`);\n      }\n    });\n\n    const response2 = this.communication.downloadImage(img2ID);\n    response2.subscribe((res: any) => {\n      if (res.body) {\n        this.rightImageURL.next(`url(data:image/bmp;base64,${res.body})`);\n        this.rightImage.next(`data:image/bmp;base64,${res.body}`);\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}